dist: xenial
os: linux
language: minimal
cache:
  ccache: true
  directories:
    - $TRAVIS_BUILD_DIR/depends/built
    - $TRAVIS_BUILD_DIR/depends/sdk-sources
    - $TRAVIS_BUILD_DIR/ci/scratch/.ccache
stages:
  - test

env:
  global:
    - CI_RETRY_EXE="travis_retry"
    - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
before_install:
  - set -o errexit; source ./ci/test/00_setup_env.sh

  - set -o errexit; source ./ci/test/03_before_install.sh

install:
  - set -o errexit; source ./ci/test/04_install.sh

  before_script:
  - set -o errexit; source ./ci/test/05_before_script.sh

  script:
  - export CONTINUE=1
  - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
  - if [ $TRAVIS_REPO_SLUG = "FantasyGold/FantasyGold-Core" ]; then export CONTINUE=1; fi  # Whitelisted repo (90 minutes build time)
  - if [ $CONTINUE = "1" ]; then set -o errexit; source ./ci/test/06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
  - if [ $SECONDS -gt 2000 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
  - if [ $TRAVIS_REPO_SLUG = "FantasyGold/FantasyGold-Core" ]; then export CONTINUE=1; fi  # Whitelisted repo (90 minutes build time)
  - if [ $CONTINUE = "1" ]; then set -o errexit; source ./ci/test/06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
after_script:
  - echo $TRAVIS_COMMIT_RANGE
jobs:
  include:
    - stage: test
      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout] [unsigned char]'
      env: >-
        FILE_ENV="./ci/test/00_setup_env_amd64_qt5.sh"
